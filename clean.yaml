---

- hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
  - group_vars/all.yaml
  - group_vars/envs/{{ environ | default("production") }}/bastion.yaml
  - group_vars/envs/{{ environ | default("production") }}/docker_registry.yaml
  tasks:
  # delete bastion machines
  - name: remove autoscale groups for bastion
    ec2_asg:
      region: "{{ ec2_region }}"
      name: "{{ item.name }}"
      launch_config_name: "{{ item.lc_name }}"
      state: absent
    with_items:
      - { name: "{{ bastion_asg_name }}", lc_name: "{{ bastion_lc_name }}" }

  - name: remove launch configurations for bastion
    ec2_lc:
      region: "{{ ec2_region }}"
      name: "{{ item.name }}"
      instance_type: "{{ item.type }}"
      state: absent
    with_items:
      - { name: "{{ bastion_lc_name }}", type: "{{ bastion_instance_type }}" }

  - name: get list of docker registries to remove
    add_host: hostname="{{ item }}" groupname=docker_registry_removal
    with_items: "{{ groups['security_group_'+docker_registry_security_group.name] }}"

# must execute on custom host group, since hosts: doesn't support supplying group name via variable
# security groups must not be deleted yet
- name: remove docker registry machines
  hosts: docker_registry_removal
  connection: local
  gather_facts: False
  vars_files:
  - group_vars/all.yaml
  tasks:
  - name: Terminate docker registries
    local_action:
        module: ec2
        state: absent
        region: "{{ ec2_region }}"
        instance_ids: "{{ec2_id}}"
        wait: true

- name: remove VPC
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
  - group_vars/all.yaml
  - group_vars/envs/{{ environ | default("production") }}/vpc.yaml
  - group_vars/envs/{{ environ | default("production") }}/bastion.yaml
  - group_vars/envs/{{ environ | default("production") }}/docker_registry.yaml
  tasks:
  # find vpc id
  - name: find vpc id
    ec2_vpc:
      region: "{{ ec2_region }}"
      cidr_block: "{{ vpc_cidr_block }}"
      resource_tags: "{{ vpc_resource_tags }}"
      internet_gateway: "{{ vpc_internet_gateway|string }}"
      subnets: "{{ vpc_subnets }}"
      wait: true
    register: vpc

  - name: delete all security groups
    ec2_group:
      region: "{{ ec2_region }}"
      name: "{{ item.name }}"
      description: "{{ item.description }}"
      vpc_id: "{{ vpc.vpc_id }}"
      state: absent
    with_items:
      - { name: "{{ bastion_security_group.name }}" , description: "{{ bastion_security_group.desc }}"}
      - { name: "{{ docker_registry_security_group.name }}" , description: "{{ docker_registry_security_group.desc }}"}

  - name: delete VPC
    ec2_vpc:
      region: "{{ ec2_region }}"
      cidr_block: "{{ vpc_cidr_block }}"
      resource_tags: "{{ vpc_resource_tags }}"
      vpc_id: "{{ vpc.vpc_id }}"
      state: absent
